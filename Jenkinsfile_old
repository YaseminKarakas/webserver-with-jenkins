pipeline {
  agent any

  environment {
    AWS_REGION = 'eu-central-1'
    AWS_ACCOUNT_ID = '767397888348'
    IMAGE_NAME = 'webserver'
    AWS_CREDENTIALS = credentials('aws-creds')
    ECR_REPO = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${IMAGE_NAME}"
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/your-org/static-site.git'
      }
    }

    stage('Configure AWS') {
      steps {
        sh """
          aws configure set aws_access_key_id $AWS_CREDENTIALS_USR
          aws configure set aws_secret_access_key $AWS_CREDENTIALS_PSW
          aws configure set default.region $AWS_REGION
        """
      }
    }

    stage('Build Docker Image') {
      steps {
        sh 'docker build -t $IMAGE_NAME .'
      }
    }

    stage('Login to ECR') {
      steps {
        sh 'aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO'
      }
    }

    stage('Push to ECR') {
      steps {
        sh """
          docker tag $IMAGE_NAME $ECR_REPO:latest
          docker push $ECR_REPO:latest
        """
      }
    }

    stage('Update ECS Service') {
      steps {
        sh """
          aws ecs update-service \
            --cluster my-cluster \
            --service static-site-svc \
            --force-new-deployment \
            --region $AWS_REGION
        """
      }
    }
  }
}
